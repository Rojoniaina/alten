{
  "openapi": "3.0.0",
  "info": {
    "description": "API Documentation.",
    "version": "1.0.0",
    "title": "API"
  },
  "servers": [
    {
      "url": "http://localhost:9000/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "internalReference": {
            "type": "string"
          },
          "shellId": {
            "type": "number"
          },
          "inventoryStatus": {
            "type": "string",
            "enum": ["INSTOCK", "LOWSTOCK", "OUTOFSTOCK"]
          },
          "rating": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": ["code", "name"],
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 2
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "internalReference": {
            "type": "string"
          },
          "shellId": {
            "type": "number"
          },
          "inventoryStatus": {
            "type": "string",
            "enum": ["INSTOCK", "LOWSTOCK", "OUTOFSTOCK"]
          },
          "rating": {
            "type": "number"
          }
        }
      }
    },
    "responses": {
      "INTERNAL_SERVER_ERROR": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/products": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Products",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This endpoint will return list of products",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 2
                    },
                    "totalItems": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "code": "BBB",
                      "name": "Product B",
                      "description": "",
                      "image": "",
                      "category": "",
                      "price": 10,
                      "quantity": 0,
                      "internalReference": "",
                      "shellId": 0,
                      "inventoryStatus": "INSTOCK",
                      "rating": 0,
                      "createdAt": "2025-06-16T13:37:12.707Z",
                      "updatedAt": "2025-06-16T13:37:12.707Z",
                      "__v": 0,
                      "id": "68501e08b4e3209c0b51f923"
                    }
                  ],
                  "page": 1,
                  "limit": 1,
                  "totalPages": 2,
                  "totalItems": 2
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Create a new product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              },
              "example": {
                "name": "Product C",
                "code": "CCC",
                "description": "",
                "image": "",
                "category": "",
                "price": 10,
                "quantity": 0,
                "internalReference": "",
                "shellId": 0,
                "inventoryStatus": "OUTOFSTOCK",
                "rating": 0
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "code": "CCC",
                  "name": "Product C",
                  "description": "",
                  "image": "",
                  "category": "",
                  "price": 10,
                  "quantity": 0,
                  "internalReference": "",
                  "shellId": 0,
                  "inventoryStatus": "OUTOFSTOCK",
                  "rating": 0,
                  "createdAt": "2025-06-16T13:37:39.957Z",
                  "updatedAt": "2025-06-16T13:37:39.957Z",
                  "id": "68501e23b4e3209c0b51f927"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "error": "Bad Request",
                  "message": "Name must have at least 2 characters"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get a product by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "code": "CCC",
                  "name": "Product CQ",
                  "description": "COQ",
                  "image": "test img",
                  "category": "C",
                  "price": 25,
                  "quantity": 5,
                  "internalReference": "REF",
                  "shellId": 1,
                  "inventoryStatus": "INSTOCK",
                  "rating": 1,
                  "createdAt": "2025-06-16T13:37:39.957Z",
                  "updatedAt": "2025-06-16T13:42:36.685Z",
                  "id": "68501e23b4e3209c0b51f927"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      },
      "patch": {
        "tags": ["Product"],
        "summary": "Update a product by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the product to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              },
              "example": {
                "name": "Product CQ",
                "code": "CCC",
                "description": "COQ",
                "image": "test img",
                "category": "C",
                "price": 25,
                "quantity": 5,
                "internalReference": "REF",
                "shellId": 1,
                "inventoryStatus": "INSTOCK",
                "rating": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "code": "CCC",
                  "name": "Product CQ",
                  "description": "COQ",
                  "image": "test img",
                  "category": "C",
                  "price": 25,
                  "quantity": 5,
                  "internalReference": "REF",
                  "shellId": 1,
                  "inventoryStatus": "INSTOCK",
                  "rating": 1,
                  "createdAt": "2025-06-16T13:37:39.957Z",
                  "updatedAt": "2025-06-16T13:42:36.685Z",
                  "id": "68501e23b4e3209c0b51f927"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "error": "Bad Request",
                  "message": "Name must have at least 2 characters"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete a product by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the product to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted status (true if deleted)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": true
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      }
    },
    "/account": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user account",
        "description": "Creates a new user account with username, firstname, email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "firstname", "email", "password"],
                "properties": {
                  "username": { "type": "string", "example": "admin" },
                  "firstname": { "type": "string", "example": "admin" },
                  "email": { "type": "string", "example": "admin@admin.com" },
                  "password": { "type": "string", "example": "aina" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string", "example": "admin" },
                    "firstname": { "type": "string", "example": "admin" },
                    "email": { "type": "string", "example": "admin@admin.com" },
                    "password": {
                      "type": "string",
                      "example": "$2b$10$FiIh4tq9TWFizh7o9o9TZ.YfVBxA578yJz2asxUOgW46bnf9Igjrq"
                    },
                    "id": {
                      "type": "string",
                      "example": "685170b752ed3a68ceb4caa9"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-06-17T13:42:15.279Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-06-17T13:42:15.279Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 400 },
                    "error": { "type": "string", "example": "Bad Request" },
                    "message": {
                      "type": "string",
                      "example": "Firstname must have at least 2 characters"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 409 },
                    "error": { "type": "string", "example": "Conflict" },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login to get JWT token",
        "description": "Authenticate a user with email and password and return a JWT token if valid.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
                    "example": "admin@admin.com",
                    "description": "Must be a valid email address"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 1,
                    "example": "aina",
                    "description": "Password must have at least 1 character"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication, returns JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 400 },
                    "error": { "type": "string", "example": "Bad Request" },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 401 },
                    "error": { "type": "string", "example": "Unauthorized" },
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 404 },
                    "error": { "type": "string", "example": "NotFound" },
                    "message": { "type": "string", "example": "User not found" }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          }
        }
      }
    }
  }
}
